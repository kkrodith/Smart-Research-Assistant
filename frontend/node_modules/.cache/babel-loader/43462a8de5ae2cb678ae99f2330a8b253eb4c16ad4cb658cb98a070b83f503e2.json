{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\smart-research-ass\\\\Smart-Research-Assistant\\\\frontend\\\\src\\\\components\\\\ChallengeMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Button, TextField, CircularProgress, Alert, Card, CardContent, Stepper, Step, StepLabel, Chip, Divider, LinearProgress, IconButton, Tooltip } from '@mui/material';\nimport { Psychology, Refresh, Send, CheckCircle, Cancel, Score, TrendingUp } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChallengeMode = ({\n  sessionId\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [error, setError] = useState('');\n  const [challengeCompleted, setChallengeCompleted] = useState(false);\n  const generateQuestions = async () => {\n    setIsLoading(true);\n    setError('');\n    setResults([]);\n    setCurrentQuestionIndex(0);\n    setChallengeCompleted(false);\n    try {\n      const response = await axios.post('/challenge', null, {\n        params: {\n          session_id: sessionId\n        }\n      });\n      setQuestions(response.data.questions);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to generate questions');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const submitAnswer = async () => {\n    if (!userAnswer.trim()) return;\n    setIsEvaluating(true);\n    setError('');\n    try {\n      const response = await axios.post('/evaluate', {\n        question: questions[currentQuestionIndex].question,\n        user_answer: userAnswer,\n        session_id: sessionId\n      });\n      const result = {\n        question: questions[currentQuestionIndex].question,\n        userAnswer: userAnswer,\n        evaluation: response.data,\n        difficulty: questions[currentQuestionIndex].difficulty\n      };\n      setResults(prev => [...prev, result]);\n      setUserAnswer('');\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(prev => prev + 1);\n      } else {\n        setChallengeCompleted(true);\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Failed to evaluate answer');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  const getDifficultyColor = difficulty => {\n    switch (difficulty.toLowerCase()) {\n      case 'easy':\n        return 'success';\n      case 'medium':\n        return 'warning';\n      case 'hard':\n        return 'error';\n      default:\n        return 'info';\n    }\n  };\n  const getScoreColor = score => {\n    if (score >= 0.8) return 'success';\n    if (score >= 0.6) return 'warning';\n    return 'error';\n  };\n  const getScoreText = score => {\n    if (score >= 0.8) return 'Excellent';\n    if (score >= 0.6) return 'Good';\n    return 'Needs Improvement';\n  };\n  const calculateOverallScore = () => {\n    if (results.length === 0) return 0;\n    const totalScore = results.reduce((sum, result) => sum + result.evaluation.score, 0);\n    return totalScore / results.length;\n  };\n  const resetChallenge = () => {\n    setQuestions([]);\n    setCurrentQuestionIndex(0);\n    setUserAnswer('');\n    setResults([]);\n    setChallengeCompleted(false);\n    setError('');\n  };\n  useEffect(() => {\n    generateQuestions();\n  }, [sessionId]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 48,\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Generating challenge questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Psychology, {\n        sx: {\n          fontSize: 48,\n          color: 'text.secondary',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Challenge Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 3\n        },\n        children: \"Test your understanding with AI-generated questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: generateQuestions,\n        startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 22\n        }, this),\n        children: \"Generate Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Psychology, {\n        sx: {\n          mr: 1,\n          color: 'primary.main'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          flex: 1\n        },\n        children: \"Challenge Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Generate new questions\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: resetChallenge,\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: currentQuestionIndex,\n      sx: {\n        mb: 3\n      },\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), !challengeCompleted ?\n    /*#__PURE__*/\n    /* Current Question */\n    _jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flex: 1\n            },\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: questions[currentQuestionIndex].difficulty,\n            color: getDifficultyColor(questions[currentQuestionIndex].difficulty),\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 3,\n            fontWeight: 500\n          },\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          placeholder: \"Type your answer here...\",\n          variant: \"outlined\",\n          disabled: isEvaluating,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Progress: \", currentQuestionIndex + 1, \" / \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: submitAnswer,\n            disabled: isEvaluating || !userAnswer.trim(),\n            startIcon: isEvaluating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 76\n            }, this),\n            children: isEvaluating ? 'Evaluating...' : 'Submit Answer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    /* Challenge Completed - Results */\n    _jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            sx: {\n              mr: 1,\n              color: 'success.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Challenge Completed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Score, {\n            sx: {\n              mr: 1,\n              color: 'primary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mr: 2\n            },\n            children: \"Overall Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: `${Math.round(calculateOverallScore() * 100)}% - ${getScoreText(calculateOverallScore())}`,\n            color: getScoreColor(calculateOverallScore())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: calculateOverallScore() * 100,\n          sx: {\n            mb: 2,\n            height: 8,\n            borderRadius: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: resetChallenge,\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 26\n          }, this),\n          sx: {\n            mt: 2\n          },\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), results.map((result, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                flex: 1\n              },\n              children: [\"Question \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: result.difficulty,\n              color: getDifficultyColor(result.difficulty),\n              size: \"small\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${Math.round(result.evaluation.score * 100)}%`,\n              color: getScoreColor(result.evaluation.score),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 1,\n              fontWeight: 500\n            },\n            children: [\"Q: \", result.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              mb: 2,\n              backgroundColor: 'grey.50'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: result.userAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Feedback:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: result.evaluation.feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengeMode, \"o5S0Q1X1GAL+/0hR+dTe67XJQFA=\");\n_c = ChallengeMode;\nexport default ChallengeMode;\nvar _c;\n$RefreshReg$(_c, \"ChallengeMode\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Button","TextField","CircularProgress","Alert","Card","CardContent","Stepper","Step","StepLabel","Chip","Divider","LinearProgress","IconButton","Tooltip","Psychology","Refresh","Send","CheckCircle","Cancel","Score","TrendingUp","axios","jsxDEV","_jsxDEV","ChallengeMode","sessionId","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswer","setUserAnswer","results","setResults","isLoading","setIsLoading","isEvaluating","setIsEvaluating","error","setError","challengeCompleted","setChallengeCompleted","generateQuestions","response","post","params","session_id","data","err","_err$response","_err$response$data","detail","submitAnswer","trim","question","user_answer","result","evaluation","difficulty","prev","length","_err$response2","_err$response2$data","getDifficultyColor","toLowerCase","getScoreColor","score","getScoreText","calculateOverallScore","totalScore","reduce","sum","resetChallenge","sx","display","flexDirection","alignItems","p","children","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","textAlign","fontSize","color","gutterBottom","onClick","startIcon","mr","flex","title","activeStep","map","index","label","fontWeight","fullWidth","multiline","rows","value","onChange","e","target","placeholder","disabled","justifyContent","Math","round","height","borderRadius","mt","backgroundColor","feedback","severity","_c","$RefreshReg$"],"sources":["C:/Desktop/smart-research-ass/Smart-Research-Assistant/frontend/src/components/ChallengeMode.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n  Alert,\r\n  Card,\r\n  CardContent,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Chip,\r\n  Divider,\r\n  LinearProgress,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  Psychology,\r\n  Refresh,\r\n  Send,\r\n  CheckCircle,\r\n  Cancel,\r\n  Score,\r\n  TrendingUp\r\n} from '@mui/icons-material';\r\nimport axios from 'axios';\r\n\r\nconst ChallengeMode = ({ sessionId }) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEvaluating, setIsEvaluating] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [challengeCompleted, setChallengeCompleted] = useState(false);\r\n\r\n  const generateQuestions = async () => {\r\n    setIsLoading(true);\r\n    setError('');\r\n    setResults([]);\r\n    setCurrentQuestionIndex(0);\r\n    setChallengeCompleted(false);\r\n\r\n    try {\r\n      const response = await axios.post('/challenge', null, {\r\n        params: { session_id: sessionId }\r\n      });\r\n      setQuestions(response.data.questions);\r\n    } catch (err) {\r\n      setError(err.response?.data?.detail || 'Failed to generate questions');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const submitAnswer = async () => {\r\n    if (!userAnswer.trim()) return;\r\n\r\n    setIsEvaluating(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post('/evaluate', {\r\n        question: questions[currentQuestionIndex].question,\r\n        user_answer: userAnswer,\r\n        session_id: sessionId\r\n      });\r\n\r\n      const result = {\r\n        question: questions[currentQuestionIndex].question,\r\n        userAnswer: userAnswer,\r\n        evaluation: response.data,\r\n        difficulty: questions[currentQuestionIndex].difficulty\r\n      };\r\n\r\n      setResults(prev => [...prev, result]);\r\n      setUserAnswer('');\r\n\r\n      if (currentQuestionIndex < questions.length - 1) {\r\n        setCurrentQuestionIndex(prev => prev + 1);\r\n      } else {\r\n        setChallengeCompleted(true);\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.detail || 'Failed to evaluate answer');\r\n    } finally {\r\n      setIsEvaluating(false);\r\n    }\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty.toLowerCase()) {\r\n      case 'easy': return 'success';\r\n      case 'medium': return 'warning';\r\n      case 'hard': return 'error';\r\n      default: return 'info';\r\n    }\r\n  };\r\n\r\n  const getScoreColor = (score) => {\r\n    if (score >= 0.8) return 'success';\r\n    if (score >= 0.6) return 'warning';\r\n    return 'error';\r\n  };\r\n\r\n  const getScoreText = (score) => {\r\n    if (score >= 0.8) return 'Excellent';\r\n    if (score >= 0.6) return 'Good';\r\n    return 'Needs Improvement';\r\n  };\r\n\r\n  const calculateOverallScore = () => {\r\n    if (results.length === 0) return 0;\r\n    const totalScore = results.reduce((sum, result) => sum + result.evaluation.score, 0);\r\n    return totalScore / results.length;\r\n  };\r\n\r\n  const resetChallenge = () => {\r\n    setQuestions([]);\r\n    setCurrentQuestionIndex(0);\r\n    setUserAnswer('');\r\n    setResults([]);\r\n    setChallengeCompleted(false);\r\n    setError('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateQuestions();\r\n  }, [sessionId]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n        <CircularProgress size={48} sx={{ mb: 2 }} />\r\n        <Typography variant=\"h6\">Generating challenge questions...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return (\r\n      <Box sx={{ p: 3, textAlign: 'center' }}>\r\n        <Psychology sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Challenge Mode\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n          Test your understanding with AI-generated questions\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={generateQuestions}\r\n          startIcon={<Refresh />}\r\n        >\r\n          Generate Questions\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {/* Header */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <Psychology sx={{ mr: 1, color: 'primary.main' }} />\r\n        <Typography variant=\"h6\" sx={{ flex: 1 }}>\r\n          Challenge Mode\r\n        </Typography>\r\n        <Tooltip title=\"Generate new questions\">\r\n          <IconButton onClick={resetChallenge} size=\"small\">\r\n            <Refresh />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      {/* Progress Stepper */}\r\n      <Stepper activeStep={currentQuestionIndex} sx={{ mb: 3 }}>\r\n        {questions.map((question, index) => (\r\n          <Step key={index}>\r\n            <StepLabel>\r\n              Question {index + 1}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      {!challengeCompleted ? (\r\n        /* Current Question */\r\n        <Card sx={{ mb: 3 }}>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n              <Typography variant=\"h6\" sx={{ flex: 1 }}>\r\n                Question {currentQuestionIndex + 1} of {questions.length}\r\n              </Typography>\r\n              <Chip\r\n                label={questions[currentQuestionIndex].difficulty}\r\n                color={getDifficultyColor(questions[currentQuestionIndex].difficulty)}\r\n                size=\"small\"\r\n              />\r\n            </Box>\r\n            \r\n            <Typography variant=\"body1\" sx={{ mb: 3, fontWeight: 500 }}>\r\n              {questions[currentQuestionIndex].question}\r\n            </Typography>\r\n            \r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              value={userAnswer}\r\n              onChange={(e) => setUserAnswer(e.target.value)}\r\n              placeholder=\"Type your answer here...\"\r\n              variant=\"outlined\"\r\n              disabled={isEvaluating}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            \r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Progress: {currentQuestionIndex + 1} / {questions.length}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={submitAnswer}\r\n                disabled={isEvaluating || !userAnswer.trim()}\r\n                startIcon={isEvaluating ? <CircularProgress size={20} /> : <Send />}\r\n              >\r\n                {isEvaluating ? 'Evaluating...' : 'Submit Answer'}\r\n              </Button>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        /* Challenge Completed - Results */\r\n        <Card sx={{ mb: 3 }}>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n              <CheckCircle sx={{ mr: 1, color: 'success.main' }} />\r\n              <Typography variant=\"h6\">\r\n                Challenge Completed!\r\n              </Typography>\r\n            </Box>\r\n            \r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n              <Score sx={{ mr: 1, color: 'primary.main' }} />\r\n              <Typography variant=\"h6\" sx={{ mr: 2 }}>\r\n                Overall Score:\r\n              </Typography>\r\n              <Chip\r\n                label={`${Math.round(calculateOverallScore() * 100)}% - ${getScoreText(calculateOverallScore())}`}\r\n                color={getScoreColor(calculateOverallScore())}\r\n              />\r\n            </Box>\r\n            \r\n            <LinearProgress\r\n              variant=\"determinate\"\r\n              value={calculateOverallScore() * 100}\r\n              sx={{ mb: 2, height: 8, borderRadius: 1 }}\r\n            />\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={resetChallenge}\r\n              startIcon={<Refresh />}\r\n              sx={{ mt: 2 }}\r\n            >\r\n              Try Again\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Results Display */}\r\n      {results.length > 0 && (\r\n        <Box>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Results\r\n          </Typography>\r\n          {results.map((result, index) => (\r\n            <Card key={index} sx={{ mb: 2 }}>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle1\" sx={{ flex: 1 }}>\r\n                    Question {index + 1}\r\n                  </Typography>\r\n                  <Chip\r\n                    label={result.difficulty}\r\n                    color={getDifficultyColor(result.difficulty)}\r\n                    size=\"small\"\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Chip\r\n                    label={`${Math.round(result.evaluation.score * 100)}%`}\r\n                    color={getScoreColor(result.evaluation.score)}\r\n                    size=\"small\"\r\n                  />\r\n                </Box>\r\n                \r\n                <Typography variant=\"body2\" sx={{ mb: 1, fontWeight: 500 }}>\r\n                  Q: {result.question}\r\n                </Typography>\r\n                \r\n                <Paper sx={{ p: 2, mb: 2, backgroundColor: 'grey.50' }}>\r\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                    <strong>Your Answer:</strong>\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {result.userAnswer}\r\n                  </Typography>\r\n                </Paper>\r\n                \r\n                <Divider sx={{ mb: 2 }} />\r\n                \r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <strong>Feedback:</strong>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {result.evaluation.feedback}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </Box>\r\n      )}\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChallengeMode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}